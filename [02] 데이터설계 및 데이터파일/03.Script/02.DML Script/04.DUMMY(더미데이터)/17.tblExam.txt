create table tblExam -- 시험
(
	exam_seq number primary key,          -- 시험번호(PK)
	question_seq number,                  -- 문제번호
	type varchar2(15),                    -- 문제 유형
	question varchar2(600),               -- 문제
	subjectSchedule_seq number not null references tblSubjectSchedule(subjectschedule_seq)-- 과목스케줄번호(FK)
);

create sequence exam_seq;

--DROP table tblExam;
--DROP sequence exam_seq;

select * from tblExam;
insert into tblExam (EXAM_SEQ,question_seq,type,question) values (exam_seq.nextVal, question_seq.nextVal, '변수+자료형+데이터', '자신의 주변 데이터를 선택해서 자료형 선택, 변수 생성, 데이터 초기화 데이터 출력을 하시오.' );
insert into tblExam (EXAM_SEQ,question_seq,type,question) values (exam_seq.nextVal, question_seq.nextVal, '연산자+형변환+콘솔입출력', '태어난 년도를 입력받아 나이를 출력하시오.' );
insert into tblExam (EXAM_SEQ,question_seq,type,question) values (exam_seq.nextVal, question_seq.nextVal, '메소드', '호출하면 인사말을 출력하는 메소드 3개를 선언하고 호출하시오.' );
insert into tblExam (EXAM_SEQ,question_seq,type,question) values (exam_seq.nextVal, question_seq.nextVal, '메소드 오버로딩', '인자로 받은 숫자들의 합을 구하는 메소드를 선언하고 호출하시오.' );
insert into tblExam (EXAM_SEQ,question_seq,type,question) values (exam_seq.nextVal, question_seq.nextVal, '날짜시간', '아래의 코드를 참고해서 현재 시간을 출력하는 메소드를 선언하고 호출하시오.' );
insert into tblExam (EXAM_SEQ,question_seq,type,question) values (exam_seq.nextVal, question_seq.nextVal, '제어문,조건문', '숫자 2개와 연산자 1개를 입력받아 연산 과정과 결과를 출력하시오.' );
insert into tblExam (EXAM_SEQ,question_seq,type,question) values (exam_seq.nextVal, question_seq.nextVal, '제어문,반복문', '숫자 2개를 입력 받아 시작 숫자에서 종료 숫자까지 1씩 증가하며 출력하시오.' );
insert into tblExam (EXAM_SEQ,question_seq,type,question) values (exam_seq.nextVal, question_seq.nextVal, '제어문,반복문', '계좌 관리 프로그램을 구현하시오.' );
insert into tblExam (EXAM_SEQ,question_seq,type,question) values (exam_seq.nextVal, question_seq.nextVal, '문자열', '이메일 주소를 입력받아 아이디와 도메인을 각각 추출하시오.' );
insert into tblExam (EXAM_SEQ,question_seq,type,question) values (exam_seq.nextVal, question_seq.nextVal, '클래스', 'Book 클래스를 설계하시오' );
insert into tblExam (EXAM_SEQ,question_seq,type,question) values (exam_seq.nextVal, question_seq.nextVal, '클래스,static', '포장하는 객체를 만드시오. 그 직원을 통해 연필, 지우개, 볼펜, 자를 포장하시오(static 멤버 구현)' );
insert into tblExam (EXAM_SEQ,question_seq,type,question) values (exam_seq.nextVal, question_seq.nextVal, '클래스,생성자', '학생 클래스를 구현하시오.(생성자 오버로딩)' );
insert into tblExam (EXAM_SEQ,question_seq,type,question) values (exam_seq.nextVal, question_seq.nextVal, '컬렉션.ArrayList', 'ArrayList 클래스를 구현하시오.' );
insert into tblExam (EXAM_SEQ,question_seq,type,question) values (exam_seq.nextVal, question_seq.nextVal, '컬렉션.HashMap', 'HashMap 클래스를 구현하시오' );
insert into tblExam (EXAM_SEQ,question_seq,type,question) values (exam_seq.nextVal, question_seq.nextVal, '컬렉션.Queue.Stack', 'Queue 클래스를 구현하시오' );
insert into tblExam (EXAM_SEQ,question_seq,type,question) values (exam_seq.nextVal, question_seq.nextVal, '파일 디렉토리 조작', '특정 파일의 경로를 입력받아 정보를 출력하시오.' );
insert into tblExam (EXAM_SEQ,question_seq,type,question) values (exam_seq.nextVal, question_seq.nextVal, '파일 입출력', '파일내에서 특정 이름을 찾아 다른 이름으로 변환 후 해당 파일을 다른 이름으로 저장하시오.' );
insert into tblExam (EXAM_SEQ,question_seq,type,question) values (exam_seq.nextVal, question_seq.nextVal, 'SQL', '모든 행과 모든 컬럼을 가져오시오' );
insert into tblExam (EXAM_SEQ,question_seq,type,question) values (exam_seq.nextVal, question_seq.nextVal, 'SQL', 'tblCountry. 모든 행과 모든 컬럼을 가져오시오.' );
insert into tblExam (EXAM_SEQ,question_seq,type,question) values (exam_seq.nextVal, question_seq.nextVal, 'SQL', 'tblInsa. 80년대생 남자 직원들의 평균 월급(basicpay)보다 더 많이 받는 80년대생 여직원들을 출력하시오.(subquery)' );
insert into tblExam (EXAM_SEQ,question_seq,type,question) values (exam_seq.nextVal, question_seq.nextVal, 'SQL', 'tblInsa. 입사년도별 남자와 여자 인원수를 가져오시오.(groupby+decode)' );

